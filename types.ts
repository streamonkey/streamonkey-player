// Generated by https://quicktype.io

export interface MyStats {
    SessionId: string
    SessionAddress: string
    IPAddress: string
    TotalBytesTransmitted: number
    CurrentPayloadBytes: number
    CurrentBurstBandwidth: number
    CurrentAvgBandwidth: number
    ConnectedSince: string
    IcyMetaData: boolean
    HttpVersion: string
    RequestHeaders: string
    UserAgent: string
    RequestQueryString: string
    CurrentItem: string
    CurrentAdmarkerAmount: number
    VirtualBufferSeconds: number
    CurrentTrack: CurrentTrack
    GeoIPCountry: string
    GeoIPState: string
    GeoIPCity: string
    GeoIPZip: string
    GeoIPLatitude: number
    GeoIPLongitude: number
    Codec: string
    Quality: string
    StreamingSessionType: string
    StreamMount: string
    StreamId: string
    PrevSessionId: string
    LastUpdate: string
    OSMReverseResponse: OSMReverseResponse | null
    FacebookInfo: null
    StreaMonkeyListenerId: string
    AdswizzListenerId: string
    AdswizzSessionId: string
    AdswizzListenerIdByAdserver: null
    AdswizzSessionIdByAdserver: Record<string, string> | null
    UseMediationLayer: boolean
    StreamingHost: string
    PCR: number
    AdvertisementDuration: number
    CellularConnection: boolean
    ReverseDNSLookup: string
    TLD: string
    WorkerPid: string
    URL: string
    HTTPS: boolean
    NextPossibleInstreamAd: string
    InstreamGracetimeSeconds2: number
    IsActiveSession: boolean
}

export interface OSMReverseResponse {
    place_id: number
    licence: string
    osm_type: string
    osm_id: number
    lat: string
    lon: string
    display_name: string
    address: { [key: string]: string }
    boundingbox: string[]
}

export interface CurrentTrack {
    TrackId: number
    Bitrate: number
    Duration: number
    StoragePath: string
    StorageType: string
    Title: string
    Artist: string
    Album: string
    Year: null
    Track: null
    Genre: string
    ArtworkPath: string
    TrackType: string
    RawTrackAccessUrl: string
    EncodingFinished: boolean
    EncodingHadError: boolean
}

export interface SocketMeta {
    artist: string
    class: string
    companion_ad: CompanionAd | null
    cover_data: null
    cover_url: string
    master_id: string
    start_time_unix: string
    title: string
    title_combined: string
}

export interface CompanionAd {
    creative_id: string
    /**
     * resource_url contains the URL of the companion ad to download the media
     * this is most likely not allowed due to CORS restrictions, so use the
     * resource_data field instead
     */
    resource_url: string
    /**
     * resource_type contains the mime type of the companion ad
     * e.g. image/png, image/jpeg
     */
    resource_type: string
    /**
     * click contain the URL where the user should be redirected to when
     * clicking the companion ad
     */
    click: string
    /**
     * click_tracking contains the URLs where the click should be tracked
     */
    click_tracking: string[]
    /**
     * view_tracking contains the URLs where the view should be tracked
     */
    view_tracking: string[]
    /**
     * resource_data contains the base64 encoded data of the companion ad
     */
    resource_data: string
}
